name: Run Tests

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          # Install basic build tools, patch, xclip for clipboard tests, and xvfb for headless X server
          sudo apt-get install -y build-essential patch xclip xvfb
          # Install a specific version of lldb and its Python bindings for compatibility with Python 3.12
          sudo apt-get install -y lldb-17 python3-lldb-17
          # Install tree-sitter related development libraries
          sudo apt-get install -y tree-sitter-cli libtree-sitter-dev

      - name: Install uv and create venv
        run: |
          python -m pip install uv
          uv venv

      - name: Install dependencies
        run: |
          uv sync

      - name: Prepare LLM configuration
        run: |
          # Copy example model configuration as the default if it doesn't exist
          if [ ! -f "model.json" ]; then
            cp model.json.example model.json
          fi

      - name: Build op_parser shared library
        # This step builds the C/C++ shared library required by Python modules
        run: |
          mkdir -p debugger/lldb/op_parser/build
          cmake -S debugger/lldb/op_parser -B debugger/lldb/op_parser/build
          cmake --build debugger/lldb/op_parser/build
        working-directory: ${{ github.workspace }} # Ensure this runs from the repository root

      - name: Copy op_parser shared library
        run: cp debugger/lldb/op_parser/build/libop_parser.so debugger/lldb/libop_parser.so

      - name: Run Unittest tests
        # tests/test_main.py exits with non-zero code on failure
        env:
          # Add project root, compiled C extensions, and the correct system lldb module to Python's path
          PYTHONPATH: .:debugger/lldb:/usr/lib/python3/dist-packages
        run: |
          xvfb-run uv run python tests/test_main.py

      - name: Run Pytest tests
        # tests/pytests_main.py exits with non-zero code on failure
        env:
          # Add project root, compiled C extensions, and the correct system lldb module to Python's path
          PYTHONPATH: .:debugger/lldb:/usr/lib/python3/dist-packages/
        run: |
          xvfb-run uv run python tests/pytests_main.py